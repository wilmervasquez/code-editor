import{i as w,a as b,S as I,j as g,k as A,g as E,s as k,l as B,m as T,c as P,u as O}from"./runtime.SR0EAR8D.js";import{P as p,f as q,g as U,h as C}from"./disclose-version.p_Um1Ybe.js";function j(){return{d:null}}function y(e,r){var u;var a=e&&((u=e[I])==null?void 0:u.t);return e===r||a===r}function z(e,r,a,u){var f,n,s=w(()=>{f=n,n=(u==null?void 0:u())||[],b(()=>{e!==a(...n)&&(r(e,...n),f&&y(a(...f),e)&&r(null,...f))})});s.ondestroy=()=>{w(()=>{n&&y(a(...n),e)&&r(null,...n)})}}function F(e,r,a,u){var R;var f=(a&q)!==0,n=(a&U)!==0,s=(a&C)!==0,v=e[r],t=(R=g(e,r))==null?void 0:R.set,l=u,h=!0,m=()=>(s&&h&&(h=!1,l=b(u)),l);if(v===void 0&&u!==void 0){if(t&&n)throw new Error("ERR_SVELTE_BINDING_FALLBACK");v=m(),t&&t(v)}var o=n?()=>{var i=e[r];return i===void 0?m():(h=!0,i)}:()=>{var i=e[r];return i!==void 0&&(l=void 0),i===void 0?l:i};if(!(a&p))return o;if(t)return function(i){return arguments.length===1?(t(i),i):o()};var c=!1,d=T(v),_=B(()=>{var i=o(),S=E(d);return c?(c=!1,S):d.v=i});return f||(_.equals=A),function(i){var S=E(_);return arguments.length>0?(_.equals(i)||(c=!0,k(d,i),E(_)),i):S}}function G(e){if(P===null)throw new Error("onMount can only be used during component initialisation.");P.r?O(()=>{const r=b(e);if(typeof r=="function")return r}):D(P).m.push(e)}function D(e){return e.u??(e.u={a:[],b:[],m:[]})}const N="modulepreload",$=function(e,r){return new URL(e,r).href},L={},K=function(r,a,u){let f=Promise.resolve();if(a&&a.length>0){const n=document.getElementsByTagName("link"),s=document.querySelector("meta[property=csp-nonce]"),v=(s==null?void 0:s.nonce)||(s==null?void 0:s.getAttribute("nonce"));f=Promise.all(a.map(t=>{if(t=$(t,u),t in L)return;L[t]=!0;const l=t.endsWith(".css"),h=l?'[rel="stylesheet"]':"";if(!!u)for(let c=n.length-1;c>=0;c--){const d=n[c];if(d.href===t&&(!l||d.rel==="stylesheet"))return}else if(document.querySelector(`link[href="${t}"]${h}`))return;const o=document.createElement("link");if(o.rel=l?"stylesheet":N,l||(o.as="script",o.crossOrigin=""),o.href=t,v&&o.setAttribute("nonce",v),document.head.appendChild(o),l)return new Promise((c,d)=>{o.addEventListener("load",c),o.addEventListener("error",()=>d(new Error(`Unable to preload CSS for ${t}`)))})}))}return f.then(()=>r()).catch(n=>{const s=new Event("vite:preloadError",{cancelable:!0});if(s.payload=n,window.dispatchEvent(s),!s.defaultPrevented)throw n})};export{K as _,z as b,j as c,G as o,F as p};
